variables:
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - .poetry-cache

stages:
  - build
  - deploy

build:
  image: matanrubin/python-poetry:3.7
  stage: build
  script:
    # Instruct poetry to keep the .venv directory in the current working directory so gitlab would cache it
    - poetry config virtualenvs.in-project true
    - poetry config cache-dir .poetry-cache
    - poetry config virtualenvs.path .poetry-cache/venv

    # Ask poetry to install all required modules (skipping the "dev" and "extra" modules) than build
    - poetry install
    - make package

    # Install the extra flask and fastapi modules required for the tests, then checkstyle and run the tests in "no psutil" env
    - poetry install --extras flask --extras fastapi --extras db --extras redis
    - make coverage

    # Install the extra psutil module and run the tests in "with psutil" env
    - poetry install --extras psutil
    - make test

    # Perform linting after all dependencies have been installed!
    - make check

  artifacts:
    paths:
      - htmlcov

deploy:
  image: matanrubin/python-poetry:3.7
  stage: deploy
  script:
    # Instruct poetry to keep the .venv directory in the current working directory so gitlab would cache it
    - poetry config virtualenvs.in-project true
    - poetry config cache-dir .poetry-cache
    - poetry config virtualenvs.path .poetry-cache/venv

    # Ask poetry to install all required modules (skipping the "dev" and "extra" modules) than build
    - poetry build
    - poetry config repositories.sedg-oss-pypi ${PYPI_REPO}
    - poetry publish --repository sedg-oss-pypi --username ${PYPI_USER} --password ${PYPI_PASSWORD}
  only:
    - master
  when: manual
